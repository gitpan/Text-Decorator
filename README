NAME
    Text::Decorator - Apply a chain of filters to text

SYNOPSIS
            $self->new(...);
            $self->format_as(...);

DESCRIPTION
    Text::Decorator is a framework for marking up plain text into various
    formats by applying a chain of filters. For instance, you might apply a
    filter which will cause URIs in text to be presented as links if the
    text is exported as HTML.

METHODS
  new
            $self->new($text)

    Creates a new Text::Decorator instance.

  nodeclass
    The class we will use for our nodes. This defaults to
    Text::Decorator::Node, but if you want to subclass that to change its
    behaviour, then you need to override this.

  add_filter
            $self->add_filter("EscapeHTML" => @arguments);

    This adds a new filter onto the queue of filters which will be applied
    to this decorator; returns the decorator object.

  format_as
            $self->format_as("html")

    Apply all the filters and return the text in the specified
    representation. If the representation is unknown, plain text will be
    returned.

AUTHOR
    Original author: Simon Cozens

    Current maintainer: Tony Bowden

BUGS and QUERIES
    Please direct all correspondence regarding this module to:
    bug-Text-Decorator@rt.cpan.org

COPYRIGHT AND LICENSE
            Copyright (C) 2003-4 Simon Cozens, 2004-6 Tony Bowden 

      This program is free software; you can redistribute it and/or modify it under
      the terms of the GNU General Public License; either version 2 of the License,
      or (at your option) any later version.

      This program is distributed in the hope that it will be useful, but WITHOUT
      ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
      FOR A PARTICULAR PURPOSE.

SEE ALSO
    Text::Decorator::Filter, Text::Decorator::Node, Text::Decorator::Group

